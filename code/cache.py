# minimal implementation to cache all of our network outputs to numpy tensors
# this will make it much faster to do np experiments today
import sys
#sys.path.insert(0, './snet/')
#sys.path.insert(0, './bnet/')


import torch
import numpy as np
from unet.unet import Unet
from dataset import ImageSegmentationDataset, labels


# hard code in google colab choices
choices = np.array([  556, 10897,  4261, 12117,   422,  2726, 12278,  5084, 11531,
        3044,  9177,  6183,  6356,  2539,   970,  7438,  9086,   847,
        4712,  2770, 11199,  3725,  5325,  9849, 11290, 10024,  5610,
       11478,  8908, 11484,   469,  3413,  1420,    54,  3972,  7304,
        8600, 11128,  8416,  9423,  3306, 11949, 11297,  1230, 11129,
        4784,  7507, 11037, 12123,  7458, 11924,  9292,  8411,  5824,
        1310,   852,  9957,  5293,  8985,  7163, 11069,  3272,  8283,
        5920, 10384,  7483,  8754, 11323,  5491, 10109,  7135,  9234,
       11294,  8208,  7292,  6050,  8090,  1959,  3200,  4783,    84,
        6522,  6890,  1639,  3541, 11658,  5162,  7957, 10684,  7004,
         286,  2986,  2208,  3647,  3905,    98,  2046,  4513, 11801,
        7252, 10578, 11512,  4596,   253,  1211,  5964,  6131,  9784,
        5756,  6727,  3931,  4435,  9815, 12200,  6778,  3521, 10503,
        4976,  5830,  4272,  9842,  7961,  8880, 12296,  5576,  3826,
        9760, 10765, 12392, 10187,  6238,  8599,  4239,  8384,   672,
        7100,  8825,  9190,  7754, 11744,  7511,  6436,  7379,  9886,
        9765,  9731,  2821,  3113,   974,   161,  5713,  8377,  6793,
       11534,  5679,  2252,  3384,  2231,  2698,  7326,   517, 10905,
       10516,  2830,  2098,  3552, 12372, 10658, 12403,  5565,  5032,
         478,  8764,  9695,   929,  3813,  4556, 11685,  5204,  5839,
        1644,  7559, 11501,  9310,  9746,  2328, 12405, 11131, 11493,
       10695, 11852,  4855,  1928,  8271,  1903,  5426,  6105,  8797,
        2431,  7850,   124, 12176,  7456, 10769,  4512,  8763,  8209,
        1676,  8004,  8970,  3620,  4942,  8990,  5235, 11593,   892,
       11163,  5844,  4251,  5922,  1394,  7789,  7002,  2790,  1790,
        8266,  4339,  4840,  9987,  8234,  9646,  5092, 12291, 10531,
        8664,   776,  3662,  8527,  2018,  5690,  3899,  6598,  3275,
         906, 12155, 12659,  9832, 10143,   841,   653,  1353,   486,
        5773,  4486,  9785,  6068,  3675,  2874,  9350,  3142,  6083,
        8575,  5889,  9943, 10772,  1500, 12091,  6531,  8619, 12467,
        6000, 11255,  4221,  6161,  7328,  6200,  5051,  2306,  6430,
        4013,  9222,  2884,  3704,  7223,  7643,  6879,  7592,  6410,
        8227, 12672,  6631,  4113,  6711,  1116,  2645,  1734,  5560,
        5597,  4907,  3503, 12038, 10799,  3720,  7059,  6904, 11752,
        2554,  9862,  4799,  1801,  4835, 11407,  7453,  4707,  7176,
        9228,  5027,  7222,  3580,  1097,  3267, 11775,  1576, 11442,
        1401,  1520,  5575, 10744,  4751,  8125,  5979,  5430,  1746,
        1857, 11067,  5208,  7640,  3030,  8236,  6327,  6804,  4925,
        3548,  6373, 11140,  2924,  1709,  5259,  6743, 10281,  7498,
        2998, 12341,  6399,  5404,  6977, 11552, 12073,  2163,  9082,
       12006,  4377,  2041,  4854,  8370,  5413, 10431,  2585,   499,
          51,  7273,   828,   643,  6012,  7219, 12039, 11574,  6170,
        8383,  1180,  3198,   186,  2280,   626,  8680,  9611,  1834,
        5304, 10060,  1016,  7448, 12213,  8811,  6383,  5966,  8247,
        1477, 12391,  2387,  5397,   475,  5284,  9916,  9702,  8262,
       10015,  9140,  1423, 10985, 11464,  9485,  7924,   677,  2900,
       12148,  3409,  2826, 12231,  9497, 11614,  7181,  9719,   612,
        1853, 11891,    64,   428, 10785,  7783, 12420, 10801,   172,
        2351,  9591,  9217, 10138,  1697,  5380,  2858,  2919,   344,
       10251, 10651,  8083,  1074,  7403,  7722,  1621,  7908, 12531,
       11871,  7911,  1264,   513,  9947,  9247,  3375,  8137, 10453,
         525, 11856,  4649,  1315,  6481,  9294,  8782, 10927,  6134,
        3592,   143,  5264,  3754,  5458, 11527,  3516,  5135, 12594,
        8605,  5410,  1139,   146,  6486,  8174,   385,  7009,  5698,
        1453,  1462,  7593, 10465, 12112,  3230,  1412,  5053, 11343,
       10094,  8561,    58, 11770,  7778,  4490,  1669,  5720,  7312,
        9313,  4306, 11175, 11330,  6602,  2101,  8713,  1527, 12500,
        8809,  5231,  6630, 12008,  1030,  1766, 11488,  1883,  3741,
        3758,  6362,  4354,  9508,  3235,  7587,  9119,  9773, 10746,
        8831,  3991,  8740,  8031,  2492,  9267, 11030,  5010, 11988,
        7875,  5845,  1050,  8636,  1402, 12639,  1434, 10122, 11156,
        1666, 12153,  2824,  5897,  6204,  9579, 11029,  9157,  8724,
        6266,  8145,  5588, 12670,  6865,    94,  6777,  1551,  2055,
        2012,  7393,  6247,  1140,   601,  7083,  8665,  3042,  1081,
       11359, 11184, 12494, 11970,  9400,  5348,  7132,  4886,  9623,
        2035, 11523, 11537,  1651,  8696, 11251,  6290,  1015,  6984,
        8727,  7479,  1143,  7653,  7390, 11459,  1589, 11057, 10357,
        6057,  8362,  7191,  2436,   423,  8848,  2127,  3469,   872,
        7622,  9229,  6417,  6662,  9691,  2438,  7863,  5895, 10226,
       11576,  6454,  5551,  3958,  9287,  5798, 10300, 11051,  8091,
       11445, 12299,  3581,  2840,  8274,  2207,  4579,  5236,  3952,
        8895,  4423,  6097,  4437,  4084,  2808,  7296, 12205,  1994,
        5772,  5238,  1688,   738,  3219,  3018,  7729,  8293,  4654,
        9479,  5595, 10080, 10369, 11693,  6219,  3907,  6484,  9992,
        1627,  8941,  9425,  7457,  7775,  7598, 12454,  7013,  9709,
        3882, 11860,  2904, 10931,  9697, 10217, 12598,  1200,  8351,
       11205,  4896,   629,  1293, 10101,  1131,  1232, 10832,  6349,
       11225,  4530,    85,   597,  3423,  5049, 11510,  6930,  7796,
        3026,  2767,  2873, 10791,  2203,  5985,   527,  6513, 10334,
        9625, 10626,  8938,  6127, 11957,  3862, 10062,  4782,  9758,
        8272,  6270,  7184,  5217,   648, 10102,  2123,  2368,   673,
        8622,   257,  6571,  1404,  5543,  1868, 12667,  3464,  1896,
        2014,  7285, 11210, 11141,  1751, 11241,  3778,  3881, 10042,
        2342,  1780,  4359,  7241,  5792,   810, 10742,  1282, 11689,
        9952, 10249,  9093, 12124,  2885,  3276,  3022,  6475,  5535,
        3342, 10581, 11742,  7953,  1387, 12426, 11305,  4566,  1451,
        5035,  3538,  7362,  9197, 10595, 11395,  7400,  9344,  6482,
        4082,  2841,  5656,  9735,  3061, 10135,  3518, 12379,  8110,
         218, 10354,  9594,  7755,  5715,  5283,  9837,  9030, 11412,
        2219,  7291,  2030, 11822,    79,  5129,  9164,  1717,  8854,
        1296, 10293,  7762,  1814,  6798,  7310,   304,  6114, 11328,
       11764,  3509,  6384, 11710,  3844,  8124,  6231,  5989,  1620,
       12348, 11931,  4875,   991, 11375,  6957,  1517,  5321,  1607,
       10133,  9067,  1035,  8779,   308,  9869, 10609,  2452,  5119,
        7134,  9408,  8525, 11390,  6218,  3642,  1496, 11907,  8325,
         220,  1619,  3432,  2822,  2142,   171, 11486,  1769,  5332,
        6157,  6139, 11951, 12613,  9562, 12276, 12475,  3451,  2416,
         551, 10762,  8860,  7377,  4519,  2206,  9193,  1887, 10982,
       10234,   833,  1511,   393,  2968, 11675, 11541,    65,  3234,
        4682,  9203,  9078,  1164, 10925,  4606,  5057,  8158,  4138,
        9520,   272,  3896,  5791,  6400,  1430, 11023,  2756, 10992,
       10436,  9239,  1122, 11006,  1870, 12251, 11968,  5372,  3689,
         554,  6585,  2033,  2232, 11563, 12248,  3162, 11189,  6365,
        7685,  3595,  7847, 11779,  2506,  3921, 11910,  9994,  5689,
       10262,  3833,  4588,  6764,  6864, 12460,   462,  2926,  2849,
       12069, 11338,  7608,  1333,  3970,  9517, 11624, 12476,  9044,
        8167,  3020,  3483,  1472,  8329,  8252,  1345,  3912,  6866,
        3745,  1738,  6729, 11110,   122, 10246,  4509,   268,  3529,
        5444, 10541,  6459,  6761,  4114, 11835,  3313, 10023,  5876,
        6730,  7097,  1999, 11644,  5477,  6093,  8334,  6044,  3426,
        1027,   806,  9724,  5803,  5993,  5196, 11912,  1882,   283,
        3664,  7346,  7614,  4312,  5558,  7226, 12308, 11506,  3731,
        2122,  9871,  7311,  2179,  1286,  8434,  1798,  8222,  4106,
        2343,  6150,  2234,   518,  9799,  5178,  9434,  1051,  7832,
        8095,  1179,  7277,  1747,  7817,  3846,  5385,  8268,  8968,
        6143,  9457,   243, 10681, 12587,  2204,  6821,  7225, 10088,
        3817,  9003,  2525,  8785,  5688,  1592, 11266,  5580,  1203,
         989,  3399,  9201,  5611,  9853,  8953,  3261,  9728,  3292,
       12108,  9549,  3322,  5716,  8744,  6187, 11357,  4578, 12025,
        4237,  1475,  4284,  1096, 12002,  4525,  7595,  7884,  8553,
        3772,  2987,  4768,  2080,  5584,  6203,  8716,  6226,  1906,
       11745,  6274, 11278,  2019,  8981,  5785,  8728,  9049,  9666,
        1128,  1330,   284,  4189,  2092,  4026, 10204,  5239,  5095,
       12557,  8330, 12492,  9831,  6334,  6987,  1584,  8304,  5449,
        3684, 11515,  3531, 10739,   731, 10314,  2936,   435, 10715,
       12464,  5130,  3473,  2695, 12344,  5486,  4365,   387,  7574,
        3819,  9989,  7028,  1138,  6958,  7107,  7979,  7224,  9619,
         995,  7108, 10754,  5925,  8232,  8408,  5530,  1441,  3088,
        1759,   468,  7158,  6364,  5776,  6995, 12699,  3489,  8879,
        5938,  8373,  9828,  9912, 10037,    92, 10140,  2518, 10493,
        1761,  8025,  8602,  3019,  3634, 11322,  4885, 10612, 10148,
        5488, 10496,  9684,  3940,  1226,  8834,  7945, 10506,  2027,
        5516, 11867,  8454,  7125,  2864,  4168,  6006,  8668,  1640,
        5846,  2393, 10050,  5931,   964,  4680, 11441,  4117,  5191,
       12227,  4633,  9413, 11661,  8635,  9398,  1950,  6911,   553,
        6295,  5903,  4603,  2462,  9613,  9848,  8577, 11301,  5640,
       12285,   859,  4487,  8867,  9597,  2091,  7998,  3504, 10481,
       10870,   808, 11246,  7025,  1167,  2879,  5707,  5618,  6912,
       10427,  5100,  8161,  9907, 11749,  2314,  4701,  6344,  5711,
       10650,  1624,  6510,  9972,  9102,  9657,  9335, 12380,  6681,
        1195,  2557,  8852,  1091, 10900,  5497,  5572,  8312,  9829,
        1133])

# don't pull too many for now
choices = choices[0:256]

def main():
    # load the boundary and segmentation models
    unet = Unet(3, 24, 512, 512, base_features=48, bottleneck = 'attention', useAttention=False, norm= 'GroupNorm').cuda()
    unet.load_state_dict(torch.load('./unet/output.ft.params'))
    # create the test set
    train_dataset = ImageSegmentationDataset('../images/', '../segm/', transform= 'FitWidth', seed = 42)
    test_dataset: ImageSegmentationDataset = train_dataset.split(0.1, choices=choices)
    # store everything
    raw = np.empty(shape= [len(choices), 3, 512, 512], dtype=np.uint8)
    segmentation = np.empty(shape=[len(choices), 24, 512, 512], dtype=np.float16)
    boundary = np.empty(shape=[len(choices), 510, 510], dtype= np.float32)
    targets = np.empty(shape=[len(choices), 512, 512], dtype=np.uint8)
    # iterate through each element in the test set
    with torch.no_grad():
        for index in range(len(test_dataset)):
            input, target = test_dataset[index]
            # cache the image raw
            raw[index, :, : , :] = input.cpu().numpy()     
            # convert the image to expected format
            input = torch.mul(input.to(dtype=torch.float32), 1/255.0).unsqueeze(0)       
            # cache the target
            targets[index, : , :] = target.squeeze(0).cpu().numpy()
            # perform segmentation
            logits, b = unet(input.cuda())
            # easier to do softmax on cuda
            logits = torch.nn.functional.softmax(logits, dim= 1)
            segmentation[index: index +1, :, : , :] = logits.cpu().numpy().astype(np.float16) 
            # perform boundary 
            boundary[index: index + 1, :, :] = b.squeeze(1)[:, 1:-1, 1:-1].cpu().numpy()
            print(index)

    # save the tensors
    np.save('./cache/raw.npy', raw)
    np.save('./cache/segmentation.npy', segmentation)
    np.save('./cache/boundary.npy', boundary)
    np.save('./cache/targets.npy', targets)

if __name__ == "__main__":
    main()